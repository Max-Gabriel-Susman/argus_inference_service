name: ci

on:
  push:
    branches: [ main ]
  pull_request:   # run tests for PRs too
    branches: [ "**" ]

jobs:
  # ────────────────────────────────────
  # 1) Unit- & integration tests
  # ────────────────────────────────────
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]   # add/remove versions as needed
    steps:
      - uses: actions/checkout@v4

      # ⚡ optional – cache venv to speed up subsequent runs
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # If you use Poetry: pip install poetry && poetry install --no-interaction
          pip install -r requirements.txt
          pip install -r requirements-dev.txt   # pytest, coverage, etc.

      - name: Install project in editable mode
        run: pip install -e .

      - name: Run test suite
        run: |
          pytest -q --cov=src --cov-report=xml

      # optional: upload coverage to Codecov/Coveralls or as an artifact
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4

  # ────────────────────────────────────
  # 2) Build & push Docker image ➜ only if tests succeeded
  # ────────────────────────────────────
  build:
    needs: test          # ← gate on successful tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}

